[[community-docs]]
Writing Neo4j Documentation
===========================

NOTE: Other than writing documentation, you can help out by providing comments - head over to the http://docs.neo4j.org/chunked/snapshot/[online HTML version] to do that!

For how to build the manual see:
https://github.com/neo4j/manual/blob/master/README.asciidoc[readme]

The documents use the asciidoc format, see:

* http://www.methods.co.nz/asciidoc/[Aciidoc Reference]
* http://powerman.name/doc/asciidoc[AsciiDoc cheatsheet]

The cheatsheet is really useful!

[[community-docs-overall-flow]]
== Overall Flow ==

Each (sub)project has its own documentation, which will produce a 'docs.jar' file.
By default this file is assembled from the contents in 'src/docs/'.
Asciidoc documents have the +.txt+ file extension.

The documents can use code snippets which will extract code from the project.
The corresponding code must be deployed to the 'sources.jar' or 'test-sources.jar' file.

The above files are all consumed by the build of the manual (by adding them as dependencies).
To get content included in the manual, it has to be explicitly included by a document in the manual as well.

== File Structure in 'docs.jar' ==

[options="header", cols="e,d"]
|========================
| Directory | Contents
| dev/ | content aimed at developers
| dev/images/ | images used by the dev docs
| ops/ | content aimed at operations
| ops/images/ | images used by the ops docs
| man/ | manpages
|========================

Additional subdirectories are used as needed to structure the documents,
like 'dev/tutorial/', 'ops/tutorial/' etc.

== Headings and document structure ==

Each document starts over with headings from level zero (the document title).
Each document should have an id.
In some cases sections in the document need to have id's as well, this depends on where they fit in the overall structure.
To be able to link to content, it has to have an id.
Missing id's in mandatory places will fail the build.

This is how a document should start:

[source]
----
[[unique-id-verbose-is-ok]]
The Document Title
==================
----

To push the headings down to the right level in the output, the +leveloffset+ 
attribute is used when including the document inside of another document.

Subsequent headings in a document should use the following syntax:

[source]
----
== Subheading ==

... content here ...

=== Subsubheading ===

content here ...

----

Asciidoc comes with one more syntax for headings, but in this project it's not used.

== Writing ==

Put one sentence on each line.
This makes it easy to move content around, and also easy to spot (too) long sentences.

== Gotchas ==

* A chapter can't be empty. (the build will fail on the docbook xml validity check)
* The document title should be "underlined" by the same
  number of +=+ as there are characters in the title.
* Always leave a blank line at the end of documents
  (or the title of the next document might end up in the last
  paragraph of the document)
* As +{}+ are used for Asciidoc attributes, everything inside will be treated as an attribute.
  What you have to do is to escape the opening brace: +\\{+.
  If you don't, the braces and the text inside them will be removed without any warning being issued!

== Links ==

To link to other parts of the manual the id of the target is used.
This is how such a reference looks:

[source]
----
<<community-docs-overall-flow>>
----

Which will render like: <<community-docs-overall-flow>>

[NOTE]
Just write "see \<<target-id>>" and similar, that's enough in most cases.

If you need to link to another document with your own link text, this is what to do:

[source]
----
<<target-id, link text that fits in the context>>
----

NOTE: Having lots of linked text may work well in a web context but is a pain in print, and we aim for both!

External links are added like this:

[source]
----
http://neo4j.org/[Link text here]
----

Which renders like: http://neo4j.org/[Link text here]

For short links it may be better not to add a link text, just do:

[source]
----
http://neo4j.org/
----

Which renders like: http://neo4j.org/

NOTE: It's ok to have a dot right after the URL, it won't be part of the link.

== Text Formatting ==

* *Bold* - just don't do it, the editor in charge is likely to remove it anyhow!
* \_Italics_ is rendered as _Italics_
* \+methodName()+ is rendered as +methodName()+ and is used for literals as well
* \`command` is rendered as `command` (typically used for command-line)
* \'my/path/' is rendered as 'my/path/' (used for file names and paths)

== Admonitions ==

These are very useful and should be used where appropriate.
Choose from the following (write all caps and no, we can't easily add new ones):

NOTE: Note.

TIP: Tip.

IMPORTANT: Important

CAUTION: Caution

WARNING: Warning

Here's how it's done:

[source]
----
NOTE: Note.
----

A multiline variation:

[source]
----
[TIP]
Tiptext.
Line 2.
----

Which is rendered as:

[TIP]
Tiptext.
Line 2.

== Images ==

IMPORTANT: _All images in the entire manual share the same namespace._
  You know how to handle that.

=== Images Files ===

To include an image file, make sure it resides in the 'images/' directory relative to the document you're including it from. Then go:

[source]
----
image::neo4j-logo.png[]
----

Which is rendered as:

image::neo4j-logo.png[]

=== Static Graphviz/DOT ===

We use the Graphviz/DOT language to describe graphs.
For documentation see http://graphviz.org/.

This is how to include a simple example graph:

[source]
----
 ["dot", "community-docs-graphdb-rels.svg"]
 ----
 "Start node" -> "End node" [label="relationship"]
 ----
----

Which is rendered as:

["dot", "community-docs-graphdb-rels.svg"]
----
"Start node" -> "End node" [label="relationship"]
----

Here's an example using some predefined variables available in the build:

[source]
----
 ["dot", "community-docs-graphdb-rels-overview.svg", "meta"]
 ----
 "A Relationship" [fillcolor="NODEHIGHLIGHT"]
 "Start node" [fillcolor="NODE2HIGHLIGHT"]
 "A Relationship" -> "Start node" [label="has a"]
 "A Relationship" -> "End node" [label="has a"]
 "A Relationship" -> "Relationship type" [label="has a"]
 Name [TEXTNODE]
 "Relationship type" -> Name [label="uniquely identified by" color="EDGEHIGHLIGHT" fontcolor="EDGEHIGHLIGHT"]
 ----
----

Which is rendered as:

["dot", "community-docs-graphdb-rels-overview.svg", "meta"]
----
"A Relationship" [fillcolor="NODEHIGHLIGHT"]
"Start node" [fillcolor="NODE2HIGHLIGHT"]
"A Relationship" -> "Start node" [label="has a"]
"A Relationship" -> "End node" [label="has a"]
"A Relationship" -> "Relationship type" [label="has a"]
Name [TEXTNODE]
"Relationship type" -> Name [label="uniquely identified by" color="EDGEHIGHLIGHT" fontcolor="EDGEHIGHLIGHT"]
----

The optional second argument given to the dot filter defines the style to use:

* when not defined: Default styling for nodespace examples.
* +neoviz+: Nodespace view generated by Neoviz.
* +meta+: Graphs that don't resemble db contents, but rather concepts.

CAUTION: Keywords of the DOT language have to be surrounded by double quotes when used for other purposes.
  The keywords include _node, edge, graph, digraph, subgraph,_ and _strict_.

== Code Snippets ==

=== Explicitly defined in the document ===

WARNING: Use this kind of code snippets as little as possible.
  They are well known to get out of sync with reality after a while.

This is how to do it:

[source]
----
 [source,cypher]
 ----
 start n=(2, 1) where (n.age < 30 and n.name = "Tobias") or not(n.name = "Tobias")  return n
 ----
----

Which is rendered as:

[source,cypher]
----
start n=(2, 1) where (n.age < 30 and n.name = "Tobias") or not(n.name = "Tobias")  return n
----

If there's no suitable syntax highlighter, just omit the language: +[source]+.

Currently the following syntax highlighters are enabled:

* Bash
* Cypher
* Groovy
* Java
* JavaScript
* Python
* XML

For other highlighters we could add see http://alexgorbatchev.com/SyntaxHighlighter/manual/brushes/.


=== Fetched from source code ===

TBD.

== Attributes ==

Common attributes you can use in documents:

* \{neo4j-version} - rendered as "{neo4j-version}"
* \{neo4j-git-tag} - rendered as "{neo4j-git-tag}"

These can substitute part of URLs that point to for example APIdocs or source code.
Note that neo4j-git-tag also handles the case of snapshot/master.

== Comments ==

There's a separate build including comments.
The comments show up with a yellow background.
It's located at http://docs.neo4j.org/annotated/.
You can also use this page to search for content, as the full manual is on a single page.
CAUTION: This version isn't intended for users in general, as the Disqus feature isn't available there.

Here's how to write a comment:

[source]
----
// this is a comment
----

The comments are not visible in the normal build.
Comment blocks won't be included in the output of any build at all.
Here's a comment block:

[source]
----
////
Note that includes in here will still be processed, but not make it into the output.
That is, missing includes here will still break the build!
////
----

== A sample Java based documentation test ==

For Java, there are a couple of premade utilities that keep code and documentation together in
Javadocs and code snippets that generate ASCIIDOC for the rest of the toolchain.

To illustrate this, look at the following documentation that generating the ASCIIDOC file +hello-world-title.txt+ with a content of:

[source]
------------------------------
include::{importdir}/neo4j-examples-docs-jar/dev/examples/hello-world-sample-chapter.txt[]
------------------------------

this file is included in this documentation via

[source]
----
  :leveloffset: 3
  include::{importdir}/neo4j-examples-docs-jar/dev/examples/hello-world-sample-chapter.txt[] 
----

which renders the following chapter: 

:leveloffset: 3

include::{importdir}/neo4j-examples-docs-jar/dev/examples/hello-world-sample-chapter.txt[]

:leveloffset: 2

== Toolchain ==

Useful links when configuring the docbook toolchain:

* http://www.docbook.org/tdg/en/html/docbook.html
* http://www.sagehill.net/docbookxsl/index.html
* http://docbook.sourceforge.net/release/xsl/1.76.1/doc/html/index.html
* http://docbook.sourceforge.net/release/xsl/1.76.1/doc/fo/index.html


